'use client'

import { useState, useEffect, useCallback } from 'react'
import { useParams, useRouter } from 'next/navigation'
import ProtectedRoute from '@/components/ProtectedRoute'
import { materialService } from '@/lib/database'
import PDFExporter from '@/components/PDFExporter'
import { formatTimeAgo } from '@/utils/subjectColors'
import type { Material } from '@/types/database'

export default function MaterialViewPage() {
  const params = useParams()
  const router = useRouter()
  const materialId = params.id as string
  
  const [material, setMaterial] = useState<Material | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState('')

  const fetchMaterial = useCallback(async () => {
    try {
      const data = await materialService.getMaterial(materialId)
      setMaterial(data)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:', error)
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª')
    } finally {
      setLoading(false)
    }
  }, [materialId])

  useEffect(() => {
    if (materialId) {
      fetchMaterial()
    }
  }, [materialId, fetchMaterial])

  const handleDelete = async () => {
    if (!material) return
    
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª?')) {
      try {
        await materialService.deleteMaterial(material.id)
        router.back()
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', error)
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª')
      }
    }
  }

  if (loading) {
    return (
      <ProtectedRoute>
        <div className="min-h-screen bg-gray-50 flex items-center justify-center">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600 text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞...</p>
          </div>
        </div>
      </ProtectedRoute>
    )
  }

  if (error || !material) {
    return (
      <ProtectedRoute>
        <div className="min-h-screen bg-gray-50 flex items-center justify-center">
          <div className="text-center">
            <div className="text-red-500 text-6xl mb-4">‚ùå</div>
            <h1 className="text-2xl font-bold text-gray-900 text-gray-100 mb-2">–û—à–∏–±–∫–∞</h1>
            <p className="text-gray-600 text-gray-400 mb-4">{error || '–ú–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω'}</p>
            <button
              onClick={() => router.back()}
              className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
            >
              –ù–∞–∑–∞–¥
            </button>
          </div>
        </div>
      </ProtectedRoute>
    )
  }

  return (
    <ProtectedRoute>
      <div className="min-h-screen bg-white">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="border-b border-gray-200 bg-white sticky top-0 z-10">
          <div className="max-w-4xl mx-auto px-6 py-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-4">
                <button
                  onClick={() => router.back()}
                  className="text-gray-500 text-gray-400 hover:text-gray-700 hover:text-gray-300 transition-colors"
                >
                  ‚Üê –ù–∞–∑–∞–¥
                </button>
                <div>
                  <h1 className="text-xl font-semibold text-gray-900 text-gray-100">{material.title}</h1>
                    <div className="flex items-center space-x-4 text-sm text-gray-500 text-gray-400">
                    <span>{formatTimeAgo(material.created_at)}</span>
                    <span>{material.ai_generated ? 'ü§ñ –°–æ–∑–¥–∞–Ω–æ –ò–ò' : '‚úèÔ∏è –°–æ–∑–¥–∞–Ω–æ –≤—Ä—É—á–Ω—É—é'}</span>
                  </div>
                </div>
              </div>
              
              <div className="flex items-center space-x-3">
                <PDFExporter
                  content={material.content || ''}
                  title={material.title}
                  className="text-sm"
                />
                <button
                  onClick={handleDelete}
                  className="text-red-600 hover:text-red-800 text-sm font-medium px-3 py-1 rounded hover:bg-red-50 transition-colors"
                >
                  –£–¥–∞–ª–∏—Ç—å
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="max-w-4xl mx-auto px-6 py-8">
          <div className="prose prose-lg max-w-none">
            <div className="whitespace-pre-wrap text-gray-900 text-gray-100 leading-relaxed">
              {material.content}
            </div>
          </div>
        </div>

        {/* –ü–æ–¥–≤–∞–ª */}
        <div className="border-t border-gray-200 bg-gray-50 mt-16">
          <div className="max-w-4xl mx-auto px-6 py-6">
            <div className="text-center text-sm text-gray-500 text-gray-400">
              <p>–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é SmartUstaz AI</p>
              <p>–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π</p>
            </div>
          </div>
        </div>
      </div>
    </ProtectedRoute>
  )
}
